.comment
  h5
    strong
      - unless comment.user.avatar.file.nil?
        = image_tag comment.user.avatar.tiny.url, class: 'avatar-tiny'
      = comment.user.full_name
  .date-block
    span.date
      = comment.created_at.strftime('%b %e')
    - if comment.edited?
      = t('edited')
  p[id="comment_#{comment.id}"]
    = comment.comment
  div.comments-block
    .comment-button
      - if @comments_details.user_likes_comments.any? { |reaction| reaction.comment_id == comment.id }
        = render 'components/liked', comment: comment, reaction: @comments_details.user_likes_comments.first { |reaction| reaction.comment_id == comment.id }
      - else
        = render 'components/like', comment: comment
      = comment.likes_count
    .comment-button
      - if @comments_details.user_dislikes_comments.any? { |reaction| reaction.comment_id == comment.id }
        = render 'components/disliked', comment: comment, reaction: @comments_details.user_dislikes_comments.first { |reaction| reaction.comment_id == comment.id }
      - else
        = render 'components/dislike', comment: comment
      = comment.dislikes_count
    - if policy(comment).destroy?
      .comment-button
        = link_to t('delete'), category_article_comment_path(@article.category, @article, comment), method: :delete
    - if policy(comment).update?
      .comment-button
        span.edit-comment[data-url="#{category_article_comment_path(@article.category, @article, comment)}" data-id="#{comment.id}"]
          = t('edit')
